// Create a file: generate-simple-report.js
const fs = require('fs');
const path = require('path');

// Read the mochawesome JSON reports
const reportsDir = 'cypress/reports/mochawesome';
const htmlOutputDir = 'cypress/reports/html';

// Ensure output directory exists
if (!fs.existsSync(htmlOutputDir)) {
  fs.mkdirSync(htmlOutputDir, { recursive: true });
}

// Read all JSON files
const jsonFiles = fs
  .readdirSync(reportsDir)
  .filter((file) => file.endsWith('.json'));
let allTests = [];
let totalPassed = 0;
let totalFailed = 0;
let totalDuration = 0;
jsonFiles.forEach((file) => {
  const reportData = JSON.parse(
    fs.readFileSync(path.join(reportsDir, file), 'utf8')
  );

  if (reportData.tests) {
    allTests = allTests.concat(reportData.tests);
  }

  if (reportData.stats) {
    totalPassed += reportData.stats.passes || 0;
    totalFailed += reportData.stats.failures || 0;
    totalDuration += reportData.stats.duration || 0;
  }
});
// Generate simple HTML
const htmlContent = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cypress Test Results</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .header { text-align: center; margin-bottom: 30px; }
        .summary { display: flex; justify-content: space-around; margin-bottom: 30px; text-align: center; }
        .stat { padding: 15px; border-radius: 5px; }
        .passed { background-color: #d4edda; color: #155724; }
        .failed { background-color: #f8d7da; color: #721c24; }
        .duration { background-color: #e2e3e5; color: #383d41; }
        .test-item { margin: 10px 0; padding: 15px; border-left: 4px solid #ccc; background: #f8f9fa; }
        .test-passed { border-left-color: #28a745; }
        .test-failed { border-left-color: #dc3545; }
        .test-title { font-weight: bold; margin-bottom: 5px; }
        .test-duration { color: #6c757d; font-size: 0.9em; }
        h1 { color: #333; }
        h2 { color: #555; margin-top: 30px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üß™ Cypress Test Results</h1>
            <p>Generated on ${new Date().toLocaleString()}</p>
        </div>
        
        <div class="summary">
            <div class="stat passed">
                <h3>${totalPassed}</h3>
                <p>Passed</p>
            </div>
            <div class="stat failed">
                <h3>${totalFailed}</h3>
                <p>Failed</p>
            </div>
            <div class="stat duration">
                <h3>${Math.round(totalDuration / 1000)}s</h3>
                <p>Duration</p>
            </div>
        </div>

        <h2>Test Details</h2>
        <div class="tests">
            ${allTests
              .map(
                (test) => `
                <div class="test-item ${test.state === 'passed' ? 'test-passed' : 'test-failed'}">
                    <div class="test-title">
                        ${test.state === 'passed' ? '‚úÖ' : '‚ùå'} ${test.fullTitle || test.title}
                    </div>
                    <div class="test-duration">Duration: ${test.duration || 0}ms</div>
                    ${test.err ? `<div style="color: #dc3545; margin-top: 10px; font-family: monospace; font-size: 0.9em;">${test.err.message}</div>` : ''}
                </div>
            `
              )
              .join('')}
        </div>
        
        <div style="margin-top: 30px; text-align: center; color: #6c757d; font-size: 0.9em;">
            <p>Report generated by Cypress Test Runner</p>
        </div>
    </div>
</body>
</html>
`;

fs.writeFileSync(path.join(htmlOutputDir, 'simple-report.html'), htmlContent);
console.log('‚úÖ Simple HTML report generated successfully!');
